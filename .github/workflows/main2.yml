name: Build Ladybird EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest # Or a specific Windows version if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive # Important for Ladybird's dependencies

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1 # Sets up the Visual Studio build environment
        with:
          arch: amd64 # or x86, arm64 as needed.

      - name: Install dependencies (if any)
        # Ladybird usually requires Qt and some other dependencies.
        # This step might need to be customized based on your specific setup.
        # Example using vcpkg (if you use it):
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg integrate install
          .\vcpkg install qt5-base:x64-windows # or qt6
          # Add any other required dependencies using vcpkg install

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64 # Adjust generator and architecture as needed.
          # If you used vcpkg, use this instead:
          # cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: |
          cd build
          cmake --build . --config Release # Or Debug if needed.

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ladybird-exe
          path: build/Release/ladybird.exe # Adjust path based on your build output
