name: Build Ladybird Browser

on:
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: /home/runner/.ccache
      CCACHE_MAXSIZE: 2G
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CCache
        run: |
          sudo apt install -y ccache
          echo "MAXSIZE=2.0G" | sudo tee /etc/ccache.conf

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            Build/
            /home/runner/.ccache
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            autoconf autoconf-archive automake build-essential ccache cmake curl \
            fonts-liberation2 git libgl1-mesa-dev nasm ninja-build pkg-config \
            qt6-base-dev qt6-tools-dev-tools qt6-wayland tar unzip zip \
            libpulse-dev qt6-multimedia-dev xvfb

      - name: Install CMake 3.25+ from Kitware
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/kitware.list
          sudo apt update -y && sudo apt install cmake -y

      - name: Install Clang 19 (C++23-capable compiler)
        run: |
          sudo wget -O /usr/share/keyrings/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
          echo "deb [signed-by=/usr/share/keyrings/llvm-snapshot.gpg.key] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-19 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
          sudo apt update -y && sudo apt install clang-19 clangd-19 clang-format-19 clang-tidy-19 lld-19 -y

      - name: Build Ladybird Using `ladybird.sh` with Virtual Display
        run: |
          chmod +x Meta/ladybird.sh
          export CC="clang-19"
          export CXX="clang++-19"
          xvfb-run --auto-servernum --server-args="-screen 0 1280x720x24" ./Meta/ladybird.sh run ladybird

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ladybird-Browser
          path: |
            Build/Ladybird/Ladybird*
            Build/Ladybird/*.so
            Build/Ladybird/*.dll
            Build/Ladybird/*.dylib
            Build/Ladybird/*.exe
          retention-days: 7
